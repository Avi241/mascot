<?xml version="1.0"?>
<robot name="mascot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="robot_name" value="$(arg robot_name)" />

  <link name="${robot_name}_base_link">
    <inertial>
      <mass value="1.477" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.1152" ixy="0" ixz="0" iyy="0.1152" iyz="0" izz="0.218" />
    </inertial>
    <collision name="mascot__collision">
      <origin rpy="0 0 0" xyz="0   0   0.04" />
      <geometry>
        <mesh filename="package://mascot/meshes/quadrotor_4.stl" />
      </geometry>
    </collision>
    <visual name="mascot__visual">
      <origin rpy="0 0 0" xyz="0   0   0.04" />
      <geometry>
        <mesh filename="package://mascot/meshes/quadrotor_4.dae" />
      </geometry>
    </visual>
  </link>

  <gazebo>
    <plugin name='simple_drone' filename='libplugin_drone.so'>
      <bodyName>${robot_name}_base_link</bodyName>
      <imuTopic>${robot_name}/drone/imu_drone</imuTopic>
      <landTopic>${robot_name}/drone/land</landTopic>
      <cmdvelTopic>${robot_name}/cmd_vel</cmdvelTopic>
      <takeoffTopic>${robot_name}/drone/takeoff</takeoffTopic>
      <posctrlTopic>${robot_name}/drone/posctrl</posctrlTopic>
      <consenTopic>${robot_name}/drone/consenctrl</consenTopic>
      <resetTopic>${robot_name}/drone/reset</resetTopic>
      <loadPIDTopic>${robot_name}/drone/loadPID</loadPIDTopic>
      <cmdforceTopic>${robot_name}/cmd_force</cmdforceTopic>
      <cmdpositionTopic>${robot_name}/cmd_position</cmdpositionTopic>
      <pubposTopic>${robot_name}/drone/gt_pose</pubposTopic>
      <pubvelTopic>${robot_name}/drone/gt_vel</pubvelTopic>
      <pubaccTopic>${robot_name}/drone/gt_acc</pubaccTopic>
      <rollpitchProportionalGain>20.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
      <velocityXYLimit>2</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>-1</velocityZLimit>

      <positionXYProportionalGain>1.1</positionXYProportionalGain>
      <positionXYDifferentialGain>0.0</positionXYDifferentialGain>

      <positionXYIntegralGain>0.0</positionXYIntegralGain>
      <positionXYLimit>100</positionXYLimit>
      <positionZProportionalGain>1.0</positionZProportionalGain>
      <positionZDifferentialGain>0.2</positionZDifferentialGain>
      <positionZLimit>-1</positionZLimit>
      <maxForce>30</maxForce>
      <motionSmallNoise>0.05</motionSmallNoise>
      <motionDriftNoise>0.03</motionDriftNoise>
      <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </plugin>
  </gazebo>
  <!-- Sensors -->
  <gazebo>
    <sensor name='sensor_imu' type='imu'>
      <always_on> 1 </always_on>
      <update_rate> 100 </update_rate>
      <pose> 0 0 0 0 0 0 </pose>
      <plugin name='ros_imu' filename='libplugin_ros_imu.so'></plugin>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean> 0 </mean>
            <stddev> 0 </stddev>
          </rate>
          <accel>
            <mean> 0 </mean>
            <stddev> 0.00 </stddev>
          </accel>
        </noise>
      </imu>
    </sensor>


    <!-- Sonar sensor in 100fps -->
    <sensor name='sensor_sonar' type='sonar'>
      <always_on>1</always_on>
      <visualize>0</visualize>
      <update_rate>100</update_rate>
      <pose> 0.5 0 0.3 0 1.570796327 3.141592653 </pose>
      <plugin name='ros_sonar' filename='libplugin_ros_sonar.so'></plugin>
      <sonar>
        <min>0</min>
        <max>5</max>
        <radius>1.33974596</radius>
      </sonar>
    </sensor>

    <!-- front camera -->
    <sensor name="front_camera" type="camera">
      <camera>
        <horizontal_fov>1.5</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
      </camera>
      <pose> 0.2 0.0 0.0 0 0 0 </pose>
      <always_on>1</always_on>
      <update_rate>60</update_rate>
      <visualize>true</visualize>
      <plugin name='front_camera' filename='libplugin_ros_cam.so'>
        <imageTopicName>/drone/front_camera/image_raw</imageTopicName>
      </plugin>
    </sensor>

    <!-- downward looking camera -->
    <sensor name="down_camera" type="camera">
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.005</stddev>
        </noise>
      </camera>
      <pose> 0.0 0.0 0.0 0 1.570796326794897 0 </pose>
      <always_on>1</always_on>
      <update_rate>15</update_rate>
      <visualize>true</visualize>
      <plugin name='down_camera' filename='libplugin_ros_cam.so'>
        <imageTopicName>/drone/down_camera/image_raw</imageTopicName>
      </plugin>
    </sensor>
  </gazebo>
</robot>